{"version":3,"sources":["constants.ts","components/CustomTileBar.tsx","components/pages/Home.tsx","components/pages/ImageClicked.tsx","components/Modal.tsx","components/GraphModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["serverUrl","useStyles","makeStyles","theme","createStyles","root","display","flexWrap","justifyContent","overflow","textAlign","gridList","width","titleBar","background","fontFamily","fontStyle","icon","color","iconFilled","styleGraph","CustomTileBar","props","useState","likes","setLikes","didUserLikeImage","alreadyLiked","setAlreadyLiked","classes","console","log","useEffect","imgId","sendPostRequest","target","data","headers","axios","post","then","response","catch","error","GridListTileBar","title","titlePosition","actionIcon","IconButton","aria-label","className","onClick","handleId","handleLike","actionPosition","endpoint","likesEndpoint","imageEndpoint","Home","items","likedImages","state","setState","graphClasses","getLikedImages","otherData","get","likedIds","GridList","cellHeight","cols","map","item","index","Grow","in","timeout","GridListTile","src","name","clickImage","handleOpenGraph","id","includes","ImageClicked","imageClicked","paper","backgroundColor","borderRadius","boxShadow","padding","spacing","height","fontSize","textfield","input","border","label","textTransform","ModalForm","enteredURL","setURL","setError","inputFile","useRef","handleClose","onChangeHandler","e","value","Card","onSubmit","preventDefault","sendURLCreateImage","TextField","style","margin","placeholder","helperText","fullWidth","InputLabelProps","shrink","InputProps","onInput","Button","type","ref","onChange","current","files","currentTarget","Array","from","forEach","file","img","split","Error","sendImage","err","alert","click","GraphModal","refContainer","lines","setLines","calc","setCalc","imgToGraph","calculator","Desmos","GraphingCalculator","setMathBounds","left","right","bottom","top","undefined","line","setExpression","latex","Colors","BLUE","getState","marginBottom","position","extendedIcon","marginRight","modal","alignItems","Pages","App","page","setPage","setImageClicked","React","openAdd","setOpenAdd","openGraph","setOpenGraph","setImgToGraph","handleCloseAdd","handleCloseGraph","imageName","document","cookie","cook","uuid","Date","toUTCString","Component","renderPage","Fab","disabled","window","scrollTo","open","onClose","aria-labelledby","aria-describedby","Modal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4ZAGaA,EAAY,8BAEZC,EAAYC,aAAW,SAACC,GAAD,OAClCC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,eAAgB,aAChBC,SAAU,SACVC,UAAW,QAGbC,SAAU,CACRC,MAAM,MAGRC,SAAU,CACRC,WACE,0FAEFC,WAAY,2BACZC,UAAW,UAEbC,KAAM,CACJC,MAAO,SAETC,WAAY,CACVD,MAAO,YAKAE,EAAalB,aAAW,SAACC,GAAD,OACnCC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,UAGZE,SAAU,CACRC,MAAM,MAGRC,SAAU,CACRC,WAAY,eAGdG,KAAM,CACJC,MAAO,c,yCCmCEG,EA5E+B,SAACC,GAE3C,MAA0BC,mBAASD,EAAME,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAASD,EAAMI,kBAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU5B,IAChB6B,QAAQC,IAAI,aAEZC,qBAAU,WACNJ,EAAgBN,EAAMI,oBACvB,CAACJ,EAAMW,QAEV,IAiBIC,EAAkB,SAACC,EAAgBC,EAAWC,GAC9CC,IAAMC,KAAUJ,EAAQC,EAAMC,GAC7BG,MAAK,SAAAC,IAK0B,IAAzBA,EAASL,KAAKZ,QACbC,EAASD,EAAM,GACfI,GAAgB,OAErBc,OAAM,SAAAC,GACLb,QAAQC,IAAIY,OAuBpB,OACI,cAACC,EAAA,EAAD,CACIC,MAAOrB,EACPsB,cAAc,MACdC,WApBDpB,EAEK,cAACqB,EAAA,EAAD,CAAYC,aAAA,eAAoB,MAAQC,UAAWrB,EAAQV,WAA3D,SACQ,cAAC,IAAD,MAKR,cAAC6B,EAAA,EAAD,CAAYC,aAAA,eAAoB,MAAQC,UAAWrB,EAAQZ,KACnDkC,QAAS,YA7CV,WACf,IAAIhB,EAAM,UAAMnC,EAAN,SAQNoC,EAAO,CACP,OAAUd,EAAM8B,WAChB,MAAS9B,EAAMW,OAGnBC,EAAgBC,EAAQC,EAXV,CACVC,QAAS,CACL,8BAA+B,IAC/B,eAAgB,gBAuCQgB,IADxB,SAEQ,cAAC,IAAD,MAaZC,eAAe,OACfJ,UAAWrB,EAAQhB,YCtEzB0C,EAAQ,UAAQvD,EAAR,QACRwD,EAAa,UAAQxD,EAAR,WACbyD,EAAa,UAAMzD,EAAN,YAqFJ0D,EAlFoB,SAACpC,GAGhC,MAA0BC,mBAAS,CAACoC,MAAM,GAAIC,YAAa,KAA3D,mBAAOC,EAAP,KAAcC,EAAd,KACMjC,EAAU5B,IACV8D,EAAe3C,IAgBrBU,QAAQC,IAAI,iBAEZ,IAAMiC,EAAiB,SAACC,GACpB3B,IAAM4B,IAAyBV,EAAgBlC,EAAM8B,WAAY,CAACf,QAAS,CACvE,8BAA+B,OAElCG,MAAK,SAAAC,GACFX,QAAQC,IAAIU,EAASL,MAErB0B,EAAS,CAACH,MAAMM,EAAWL,YAAanB,EAASL,KAAK+B,cACvDzB,OAAM,SAAAC,GACLb,QAAQC,IAAIY,GACZb,QAAQC,IAAIwB,OAYpB,OARAvB,qBAAU,WA7BNM,IAAM4B,IAAkBX,EAAU,CAAClB,QAAS,CACxC,8BAA+B,OAElCG,MAAK,SAAAC,GACFX,QAAQC,IAAIU,EAASL,MAErB4B,EAAevB,EAASL,KAAKuB,UAC9BjB,OAAM,SAAAC,GACLb,QAAQC,IAAIY,GACZb,QAAQC,IAAIwB,QAsBjB,IAOC,8BACI,qBAAKL,UAAWrB,EAAQxB,KAAxB,SACI,cAAC+D,EAAA,EAAD,CAAUC,WAAY,IAAKnB,UAAWrB,EAAQlB,SAAU2D,KAAM,EAA9D,SACKT,EAAMF,MAAMY,KAAI,SAACC,EAAKC,GAAN,OACb,cAACC,EAAA,EAAD,yBAAMC,IAAM,GACA,CAAEC,QAAqB,KAAXH,EAAO,KAD/B,aAEI,eAACI,EAAA,EAAD,WACI,qBAAKC,IAAKrB,EAAgBe,EAAKO,KAAM5B,QAAS,WAAO7B,EAAM0D,WAAWR,EAAKO,SAC3E,cAACnC,EAAA,EAAD,CACIE,cAAc,SACdC,WACI,cAACC,EAAA,EAAD,CAAYC,aAAA,eAAoB,MAAQC,UAAWrB,EAAQZ,KACvDkC,QAAS,WAAO7B,EAAM2D,gBAAgBT,EAAKO,OAD/C,SAEI,cAAC,IAAD,MAKRzB,eAAe,OACfJ,UAAWa,EAAalD,WAE5B,cAAC,EAAD,CACIW,MAAOgD,EAAKhD,MACZ4B,SAAU9B,EAAM8B,SAChBnB,MAAOuC,EAAKU,GACZxD,iBAAkBmC,EAAMD,YAAYuB,SAASX,EAAKU,QAnBvCV,EAAKU,iBCzD9CzB,EAAa,UAAMzD,EAAN,YAoFJoF,EAlF4B,SAAC9D,GAExC,MAA0BC,mBAAS,CAACoC,MAAM,GAAIC,YAAa,KAA3D,mBAAOC,EAAP,KAAcC,EAAd,KACMjC,EAAU5B,IACV8D,EAAe3C,IAEfmC,EAAQ,UAAMvD,EAAN,6BAAoCsB,EAAM+D,cAClD7B,EAAa,UAAQxD,EAAR,WAcbgE,EAAiB,SAACC,GACpB3B,IAAM4B,IAAyBV,EAAgBlC,EAAM8B,WAAY,CAACf,QAAS,CACvE,8BAA+B,OAElCG,MAAK,SAAAC,GACFX,QAAQC,IAAIU,EAASL,MAErB0B,EAAS,CAACH,MAAMM,EAAWL,YAAanB,EAASL,KAAK+B,cACvDzB,OAAM,SAAAC,GACLb,QAAQC,IAAIY,GACZb,QAAQC,IAAIwB,OAQpB,OAJAvB,qBAAU,WAzBNM,IAAM4B,IAAkBX,EAAU,CAAClB,QAAS,CACxC,8BAA+B,OAElCG,MAAK,SAAAC,GACFX,QAAQC,IAAIU,EAASL,MACrB4B,EAAgBvB,EAASL,KAAKuB,UAC/BjB,OAAM,SAAAC,GACLb,QAAQC,IAAIY,QAoBjB,CAACrB,EAAM+D,eAGN,sBAAKnC,UAAU,WAAf,UACI,iEAEA,qBAAKA,UAAWrB,EAAQxB,KAAxB,SACI,eAAC+D,EAAA,EAAD,CAAUC,WAAY,IAAKnB,UAAWrB,EAAQlB,SAAU2D,KAAM,EAA9D,UACI,cAACO,EAAA,EAAD,CAA4BP,KAAM,EAAlC,SACI,qBAAKQ,IAAKrB,EAAgBnC,EAAM+D,gBADjB,QAGlBxB,EAAMF,MAAMY,KAAI,SAACC,EAAKC,GAAN,OACb,cAACC,EAAA,EAAD,CAAMC,IAAM,EACLC,QAAoB,KAAVH,EAAM,GADvB,SAEI,eAACI,EAAA,EAAD,WACI,qBAAKC,IAAKrB,EAAgBe,EAAKO,KAC3B5B,QAAS,WAAO7B,EAAM0D,WAAWR,EAAKO,SAC1C,cAACnC,EAAA,EAAD,CACIE,cAAc,SACdC,WACI,cAACC,EAAA,EAAD,CAAYC,aAAA,eAAoB,MAAQC,UAAWrB,EAAQZ,KACvDkC,QAAS,WAAO7B,EAAM2D,gBAAgBT,EAAKO,OAD/C,SAEI,cAAC,IAAD,MAKRzB,eAAe,OACfJ,UAAWa,EAAalD,WAE5B,cAAC,EAAD,CACIW,MAAOgD,EAAKhD,MACZ4B,SAAU9B,EAAM8B,SAChBnB,MAAOuC,EAAKU,GACZxD,iBAAkBmC,EAAMD,YAAYuB,SAASX,EAAKU,QApBvCV,EAAKU,kB,2BCxD9CjF,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTkF,MAAO,CACHC,gBAAiB,UAEjBC,aAAc,MACdC,UAAW,qGACXC,QAASvF,EAAMwF,QAAQ,EAAG,EAAG,GAC7B/E,MAAO,QACPgF,OAAQ,QACR7E,WAAY,SACZG,MAAO,QAEX2B,MAAO,CACHgD,SAAU,IAEdC,UAAW,CACP5E,MAAO,YAEX6E,MAAO,CACH7E,MAAO,SAEXb,KAAM,CACFS,WAAY,mDACZ0E,aAAc,EACdQ,OAAQ,EACR9E,MAAO,QACP0E,OAAQ,GACRF,QAAS,SACTD,UAAW,yCAEbQ,MAAO,CACLC,cAAe,mBA8JZC,EAzJ0B,SAAC7E,GACtC,IAAMO,EAAU5B,IAChB,EAA6BsB,mBAAS,IAAtC,mBAAO6E,EAAP,KAAmBC,EAAnB,KACA,EAA0B9E,oBAAS,GAAnC,mBAAOoB,EAAP,KAAc2D,EAAd,KACMC,EAAYC,iBAAyB,MAErCtE,EAAkB,SAACC,EAAgBC,EAAWC,GAChDC,IAAMC,KAAmBJ,EAAQC,EAAMC,GACtCG,MAAK,SAAAC,GAEF6D,GAAS,GACThF,EAAM0D,WAAWvC,EAASL,KAAKuB,MAAM,GAAGoB,MACxCzD,EAAMmF,iBACP/D,OAAM,SAAAC,GACLb,QAAQC,IAAIY,GACZ2D,GAAS,OAkCXI,EAAmB,SAACC,GACtB7E,QAAQC,IAAI4E,EAAExE,OAAOyE,OACrBP,EAAOM,EAAExE,OAAOyE,QA0EpB,OACI,eAACC,EAAA,EAAD,CAAM3D,UAAWrB,EAAQyD,MAAzB,UACI,mBAAGpC,UAAU,aAAb,+BACA,mBAAGA,UAAU,YAAb,wBACA,uBAAM4D,SAAY,SAACH,GAAQA,EAAEI,iBA9GV,WACvB,IAAI5E,EAAM,UAAMnC,EAAN,gBAQVkC,EAAgBC,EAAQiE,EANV,CACV/D,QAAS,CACL,8BAA+B,IAC/B,eAAgB,gBAwG2B2E,IAA/C,UA1EDrE,EACQ,cAACsE,EAAA,EAAD,CACHtE,OAAK,EACLuC,GAAG,sBACHe,MAAM,MACNiB,MAAO,CAAEC,OAAQ,GACjBC,YAAY,0BACZC,WAAW,yCACXC,WAAS,EACTH,OAAO,SACPI,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRvE,UAAWrB,EAAQkE,OAEvBa,MAAOR,EACPsB,QAAShB,IAEP/D,OAAJ,EACK,cAACsE,EAAA,EAAD,CAEH/B,GAAG,sBACHe,MAAM,MACNiB,MAAO,CAAEC,OAAQ,GACjBC,YAAY,0BACZC,WAAW,yCACXC,WAAS,EACTH,OAAO,SACPI,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRvE,UAAWrB,EAAQkE,OAEvBa,MAAOR,EACPsB,QAAShB,IAwCT,cAACiB,EAAA,EAAD,CAAQC,KAAK,SACL/F,QAAS,CACLxB,KAAMwB,EAAQxB,KACd4F,MAAOpE,EAAQoE,OAH3B,uBAQJ,mBAAG/C,UAAU,YAAb,gCACA,uBAAO0E,KAAK,OAAO1C,GAAG,OAAO2C,IAAKtB,EAAWW,MAAO,CAAC5G,QAAS,QAASwH,SAjC9D,SAACnB,GAGd,GADA7E,QAAQC,IAAI,eACc,OAAtBwE,EAAUwB,QAAiB,CAC3BjG,QAAQC,IAAIwE,EAAUwB,QAAQC,OAC9B,IAAMA,EAASrB,EAAEsB,cAAcD,MAC/BE,MAAMC,KAAKH,GAAOI,SAAQ,SAAAC,GACtB,KAnFM,SAACC,GACf,IAAInG,EAAM,UAAMnC,EAAN,gBAEN4H,EAAOU,EAAIV,KACf,GAA0B,UAAvBA,EAAKW,MAAM,KAAK,GACf,MAAM,IAAIC,MAAM,mBASpBtG,EAAgBC,EAAQmG,EANV,CACVjG,QAAS,CACL,8BAA+B,IAC/B,eAAgBuF,KAyEZa,CAAUJ,GACb,MAAMK,GACH/B,EAAExE,OAAOyE,MAAQ,KACjB+B,MAAM,iCAuBd,cAAChB,EAAA,EAAD,CAAQxE,QA7CM,WAEQ,OAAtBoD,EAAUwB,UACVxB,EAAUwB,QAAQa,QAElB9G,QAAQC,IAAIwE,EAAUwB,QAAQC,OAC9BlG,QAAQC,IAAI,iBAwCJF,QAAS,CACLxB,KAAMwB,EAAQxB,KACd4F,MAAOpE,EAAQoE,OAH3B,yC,iBC1FG4C,EAzFgC,SAACvH,GAE5C,IAqBMwH,EAAetC,iBAAO,MAC5B,EAA0BjF,qBAA1B,mBAAOwH,EAAP,KAAcC,EAAd,KACA,EAAwBzH,mBAAS,MAAjC,mBAAO0H,EAAP,KAAaC,EAAb,KAEM3F,EAAQ,UAAMvD,EAAN,kBAAyBsB,EAAM6H,YAiD7C,OAjCAnH,qBAAU,WAbNM,IAAM4B,IAAWX,EAAU,CAAClB,QAAS,CACjC,8BAA+B,OAElCG,MAAK,SAAAC,GACFX,QAAQC,IAAIU,EAASL,MACrB4G,EAAUvG,EAASL,SACpBM,OAAM,SAAAC,GACLb,QAAQC,IAAIY,MAShB,IAAIyG,EAAaC,IAAOC,mBAAmBR,EAAaf,SACxDqB,EAAWG,cAAc,CACrBC,KAAM,EACNC,MAAO,IACPC,OAAQ,EACRC,IAAK,MAEPT,EAAQE,KACX,CAAC9H,EAAM6H,aAEVnH,qBAAU,WAEN,GAA4B,OAAzB8G,EAAaf,SAA6B,OAATkB,EAAc,CAE9C,QAAaW,IAAVb,EAAoB,CAGnBA,EAAM3G,KAAKmC,KAAI,SAAAsF,GACPZ,EAAKa,cAAc,CAAEC,MAAOF,EAAM3I,MAAOmI,IAAOW,OAAOC,UAI/DnI,QAAQC,IAAIkH,EAAKiB,YAErBpI,QAAQC,IAAIgH,MAGjB,CAACA,IAIA,gCACI,qBAAK7B,MAvEG,CACZtG,MAAO,SACPgF,OAAQ,OACRL,gBAAiB,UACjB4E,aAAc,OAEd3E,aAAc,MAGdtE,MAAO,QACPwE,QAAS,MACTpF,QAAS,OACTE,eAAgB,UA2DZ,SACI,wIAEJ,qBAAK0E,GAAG,aAAagC,MA/Eb,CACZtG,MAAO,SACPgF,OAAQ,SA6EiCiC,IAAKiB,Q,qECxEhD7I,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ,QAAS,CACP8G,OAAQhH,EAAMwF,QAAQ,IAExBwB,OAAQ,EACRwC,IAAK,OACLF,MAAO,GACPC,OAAQ,GACRF,KAAM,OACNY,SAAU,SAGZC,aAAc,CACZC,YAAanK,EAAMwF,QAAQ,IAE7B4E,MAAO,CACLjK,QAAS,OACTkK,WAAY,SACZhK,eAAgB,eAKtBsB,QAAQC,IAAI0I,GA6HGC,OA3Hf,WACE,IAAM7I,EAAU5B,KAChB,EAAwBsB,mBAAmB,CAACqF,MAAM,SAAlD,mBAAO+D,EAAP,KAAaC,EAAb,KACA,EAAwCrJ,mBAAiB,IAAzD,mBAAO8D,EAAP,KAAqBwF,EAArB,KACA,EAA8BC,IAAMvJ,UAAS,GAA7C,mBAAOwJ,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,IAAMvJ,UAAS,GAAjD,mBAAO0J,EAAP,KAAkBC,EAAlB,KACA,EAAoC3J,mBAAS,IAA7C,mBAAO4H,EAAP,KAAmBgC,EAAnB,KAOMC,EAAiB,WACrBJ,GAAW,IAGP/F,EAAkB,SAACqD,GACvB4C,GAAa,GACbC,EAAc7C,IAGV+C,EAAmB,WACvBH,GAAa,IAGTlG,EAAa,SAACsG,GAClBT,EAAgBS,GAChBV,EAAQ,CAAChE,MAAO,kBAgCdxD,EAAW,WACb,GAAGmI,SAASC,OACV,OAAOD,SAASC,OAAOjD,MAAM,KAAK,GAElC,IAAIkD,EAAI,aAASC,MAAT,oBAA2B,IAAIC,KAAK,cAAcC,eAE1D,OADAL,SAASC,OAASC,EACXF,SAASC,OAAOjD,MAAM,KAAK,IAStC,OACE,qBAAKrF,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,mBAAGA,UAAU,QAAb,8BA1Ce,SAACyH,GAClB,IAAIkB,EAGJ,OAFAA,EAAYpB,EAAME,GAEX,cAACkB,EAAD,CACC7G,WAAcA,EACdK,aAAgBA,EAChBJ,gBAAmBA,EACnB7B,SAAYA,IAoCf0I,CAAWnB,EAAK/D,OAGjB,sBAAK1D,UAAWrB,EAAQxB,KAAxB,UACQ,cAAC0L,EAAA,EAAD,CAAK7K,MAAM,UAAU+B,aAAW,MAAME,QA3E9B,WACpB6H,GAAW,IA0EC,SACI,cAAC,IAAD,MApCG,SAAfL,EAAK/D,MACC,cAACmF,EAAA,EAAD,CAAK7K,MAAM,YAAY+B,aAAW,OAAO+I,UAAQ,EAAjD,SACE,cAAC,IAAD,MAEa,iBAAfrB,EAAK/D,MACL,cAACmF,EAAA,EAAD,CAAK7K,MAAM,YAAY+B,aAAW,OAAOE,QAAS,WAtB5D0H,EAAgB,IAChBD,EAAQ,CAAChE,MAAO,UAqBN,SACE,cAAC,IAAD,WAFL,EAmCK,cAACmF,EAAA,EAAD,CAAK7K,MAAM,UAAU+B,aAAW,MAAME,QAlBlC,WAChB8I,OAAOC,SAAS,EAAG,IAiBP,SACI,cAAC,IAAD,SAIV,cAAC,IAAD,CACEC,KAAMpB,EACNqB,QAAShB,EACTiB,kBAAgB,qBAChBC,mBAAiB,2BACjBpJ,UAAWrB,EAAQ0I,MALrB,SAOE,cAACgC,EAAD,CACE9F,YAAe2E,EACfpG,WAAcA,MAGlB,cAAC,IAAD,CACEmH,KAAMlB,EACNmB,QAASf,EACTgB,kBAAgB,qBAChBC,mBAAiB,2BACjBpJ,UAAWrB,EAAQ0I,MALrB,SAOE,cAAC,EAAD,CACE9D,YAAe4E,EACfrG,WAAcA,EACdmE,WAAcA,YClJbqD,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBlK,MAAK,YAAkD,IAA/CmK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF3B,SAAS4B,eAAe,SAM1BX,M","file":"static/js/main.31cc40e8.chunk.js","sourcesContent":["import { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n// export const serverUrl = \"http://localhost:5000\";\r\nexport const serverUrl = \"http://178.128.231.244:5000\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'flex-start',\r\n      overflow: 'hidden',\r\n      textAlign: 'left'\r\n      \r\n    },\r\n    gridList: {\r\n      width:1200,\r\n      \r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n      fontFamily: \"Varela Round, sans-serif\",\r\n      fontStyle: \"normal\",\r\n    },\r\n    icon: {\r\n      color: 'white',\r\n    },\r\n    iconFilled: {\r\n      color: 'red',\r\n    },\r\n  }),\r\n);\r\n\r\nexport const styleGraph = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      \r\n    },\r\n    gridList: {\r\n      width:1200,\r\n      \r\n    },\r\n    titleBar: {\r\n      background: 'transparent'\r\n        \r\n    },\r\n    icon: {\r\n      color: 'white',\r\n    },\r\n  }),\r\n);","import React, { useState, FC , useRef, useEffect, useReducer } from 'react';\r\nimport { CustomProps } from './../Interfaces'\r\nimport { serverUrl, useStyles, styleGraph } from './../constants'\r\n\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const CustomTileBar: FC<CustomProps> = (props): JSX.Element => {\r\n\r\n    const [likes, setLikes] = useState(props.likes);\r\n    const [alreadyLiked, setAlreadyLiked] = useState(props.didUserLikeImage);\r\n    const classes = useStyles();\r\n    console.log(\"REALODING\")\r\n\r\n    useEffect(() => {\r\n        setAlreadyLiked(props.didUserLikeImage)\r\n    }, [props.imgId])\r\n\r\n    const handleLike = () => {\r\n        let target = `${serverUrl}/like`\r\n\r\n        let headers = {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"text/plain\"\r\n            }\r\n        }\r\n        let data = {\r\n            \"userId\": props.handleId(),\r\n            \"imgId\": props.imgId\r\n        }\r\n\r\n        sendPostRequest(target, data, headers);\r\n    }\r\n\r\n    let sendPostRequest = (target: string, data: any, headers: object) =>{\r\n        axios.post<any>(target, data, headers)\r\n        .then(response => {\r\n            // set base files image to the newly created one\r\n            // setError(false)\r\n            // props.clickImage(response.data.items[0].name);\r\n            // props.handleClose();\r\n            if(response.data.likes !== -1){\r\n                setLikes(likes+1)\r\n                setAlreadyLiked(true)\r\n            }\r\n        }).catch(error =>{\r\n            console.log(error)\r\n            // setError(true)\r\n        })\r\n    }\r\n\r\n    let createIconButton = () => {\r\n\r\n        if(alreadyLiked){\r\n            return(\r\n                <IconButton aria-label={`star ${\"hi\"}`} className={classes.iconFilled}>\r\n                        <FavoriteIcon/>\r\n                </IconButton>\r\n            )\r\n        }else{\r\n            return(\r\n                <IconButton aria-label={`star ${\"hi\"}`} className={classes.icon} \r\n                        onClick={() => {handleLike()}}>\r\n                        <FavoriteBorderIcon/>\r\n                </IconButton>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GridListTileBar\r\n            title={likes}\r\n            titlePosition=\"top\"\r\n            actionIcon={\r\n                createIconButton()                    \r\n            }\r\n            actionPosition=\"left\"\r\n            className={classes.titleBar}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CustomTileBar","import React, { useState, useEffect, FC } from 'react';\r\nimport axios from 'axios';\r\nimport { Item, ItemResponse, PageProps, LikedImagesResponse } from '../../Interfaces'\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport { serverUrl, useStyles, styleGraph } from '../../constants'\r\nimport CustomTileBar from './../CustomTileBar'\r\n\r\nconst endpoint  =  `${serverUrl}/all`;\r\nconst likesEndpoint  =  `${serverUrl}/likes/`;\r\nconst imageEndpoint = `${serverUrl}/images/`;\r\n\r\n\r\nexport const Home: FC<PageProps> = (props): JSX.Element => {\r\n    // const [items, setItems] = useState<Item[]>([]);\r\n    // const [likedImages, setLikedImages] = useState<number[]>([]);\r\n    const [state, setState] = useState({items:[], likedImages: []})\r\n    const classes = useStyles();\r\n    const graphClasses = styleGraph();\r\n\r\n    const getImages = () => {\r\n        axios.get<ItemResponse>(endpoint, {headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }})\r\n        .then(response => {\r\n            console.log(response.data);\r\n            // setItems( response.data.items );\r\n            getLikedImages(response.data.items)\r\n        }).catch(error =>{\r\n            console.log(error)\r\n            console.log(endpoint)\r\n        })\r\n    };\r\n\r\n    console.log(\"home reloaded\")\r\n\r\n    const getLikedImages = (otherData) => {\r\n        axios.get<LikedImagesResponse>(likesEndpoint + props.handleId(), {headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }})\r\n        .then(response => {\r\n            console.log(response.data);\r\n            // likedImages=  response.data.likedIds ;\r\n            setState({items:otherData, likedImages: response.data.likedIds})\r\n        }).catch(error =>{\r\n            console.log(error)\r\n            console.log(endpoint)\r\n        })\r\n    };\r\n    \r\n    useEffect(() => {\r\n        getImages();\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     getLikedImages();\r\n    // }, [items])\r\n\r\n    return (\r\n        <div >\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={300} className={classes.gridList} cols={3}>\r\n                    {state.items.map((item,index) => (\r\n                        <Grow in = {true}\r\n                        {...(true ? { timeout: (index +1) *100 } : {})}>\r\n                            <GridListTile key={item.id}>\r\n                                <img src={imageEndpoint + item.name} onClick={() => {props.clickImage(item.name)}}/>\r\n                                <GridListTileBar\r\n                                    titlePosition=\"bottom\"\r\n                                    actionIcon={\r\n                                        <IconButton aria-label={`star ${\"hi\"}`} className={classes.icon} \r\n                                            onClick={() => {props.handleOpenGraph(item.name)}}>\r\n                                            <ShowChartIcon />\r\n                                        </IconButton>\r\n                                        \r\n                                        \r\n                                    }\r\n                                    actionPosition=\"left\"\r\n                                    className={graphClasses.titleBar}\r\n                                />\r\n                                <CustomTileBar\r\n                                    likes={item.likes}\r\n                                    handleId={props.handleId}\r\n                                    imgId={item.id}\r\n                                    didUserLikeImage={state.likedImages.includes(item.id)}\r\n                                />\r\n                            </GridListTile>\r\n                        </Grow>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect, FC } from 'react';\r\nimport axios from 'axios';\r\nimport { Item, ItemResponse, PageProps, LikedImagesResponse } from '../../Interfaces'\r\nimport CustomTileBar from './../CustomTileBar'\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { serverUrl, useStyles, styleGraph } from '../../constants'\r\nimport Grow from '@material-ui/core/Grow';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\nconst imageEndpoint = `${serverUrl}/images/`;\r\n\r\nexport const ImageClicked: FC<PageProps> = (props): JSX.Element => {\r\n    // const [items, setItems] = useState<Item[]>([]);\r\n    const [state, setState] = useState({items:[], likedImages: []})\r\n    const classes = useStyles();\r\n    const graphClasses = styleGraph();\r\n\r\n    const endpoint = `${serverUrl}/getSimilarImages/${props.imageClicked}`;\r\n    const likesEndpoint  =  `${serverUrl}/likes/`;\r\n    \r\n    const sendGetRequest = () => {\r\n        axios.get<ItemResponse>(endpoint, {headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }})\r\n        .then(response => {\r\n            console.log(response.data);\r\n            getLikedImages( response.data.items );\r\n        }).catch(error =>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    const getLikedImages = (otherData) => {\r\n        axios.get<LikedImagesResponse>(likesEndpoint + props.handleId(), {headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }})\r\n        .then(response => {\r\n            console.log(response.data);\r\n            // likedImages=  response.data.likedIds ;\r\n            setState({items:otherData, likedImages: response.data.likedIds})\r\n        }).catch(error =>{\r\n            console.log(error)\r\n            console.log(endpoint)\r\n        })\r\n    };\r\n    \r\n    useEffect(() => {\r\n        sendGetRequest();\r\n    }, [props.imageClicked])\r\n\r\n    return (\r\n        <div className='selected'>\r\n            <p>Similar Images to Selected Image</p>\r\n\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={400} className={classes.gridList} cols={3}>\r\n                    <GridListTile key={\"main\"}  cols={3}>\r\n                        <img src={imageEndpoint + props.imageClicked} />\r\n                    </GridListTile>\r\n                    {state.items.map((item,index) => (\r\n                        <Grow in = {true}\r\n                        {...({ timeout: (index+1) *200 })}>\r\n                            <GridListTile key={item.id}>\r\n                                <img src={imageEndpoint + item.name}\r\n                                    onClick={() => {props.clickImage(item.name)}}/>\r\n                                <GridListTileBar\r\n                                    titlePosition=\"bottom\"\r\n                                    actionIcon={\r\n                                        <IconButton aria-label={`star ${\"hi\"}`} className={classes.icon} \r\n                                            onClick={() => {props.handleOpenGraph(item.name)}}>\r\n                                            <ShowChartIcon />\r\n                                        </IconButton>\r\n                                        \r\n                                        \r\n                                    }\r\n                                    actionPosition=\"left\"\r\n                                    className={graphClasses.titleBar}\r\n                                />\r\n                                <CustomTileBar\r\n                                    likes={item.likes}\r\n                                    handleId={props.handleId}\r\n                                    imgId={item.id}\r\n                                    didUserLikeImage={state.likedImages.includes(item.id)}\r\n                                />\r\n                            </GridListTile>\r\n                        </Grow>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageClicked;","import React, { useState, FC , useRef } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { serverUrl } from './../constants'\r\nimport { ItemResponse, ModalProps } from './../Interfaces'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            backgroundColor: \"#282C34\",\r\n            \r\n            borderRadius: '4px',\r\n            boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n            padding: theme.spacing(2, 4, 3),\r\n            width: '700px',\r\n            height: '400px',\r\n            fontFamily: \"Roboto\",\r\n            color: 'gray'\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        textfield: {\r\n            color: '#F8FCFF,'\r\n        },\r\n        input: {\r\n            color: \"white\"\r\n        },\r\n        root: {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            borderRadius: 3,\r\n            border: 0,\r\n            color: 'white',\r\n            height: 48,\r\n            padding: '0 30px',\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n          },\r\n          label: {\r\n            textTransform: 'capitalize',\r\n          },\r\n    }),\r\n);\r\n\r\nexport const ModalForm: FC<ModalProps> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n    const [enteredURL, setURL] = useState('');\r\n    const [error, setError] = useState(false)\r\n    const inputFile = useRef<HTMLInputElement>(null)\r\n\r\n    const sendPostRequest = (target: string, data: any, headers: object) => {\r\n        axios.post<ItemResponse>(target, data, headers)\r\n        .then(response => {\r\n            // set base files image to the newly created one\r\n            setError(false)\r\n            props.clickImage(response.data.items[0].name);\r\n            props.handleClose();\r\n        }).catch(error =>{\r\n            console.log(error)\r\n            setError(true)\r\n        })\r\n    };\r\n\r\n    const sendURLCreateImage = () => {\r\n        let target = `${serverUrl}/createImage`\r\n\r\n        let headers = {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"text/plain\"\r\n            }\r\n        }\r\n        sendPostRequest(target, enteredURL, headers);\r\n    }\r\n\r\n    const sendImage = (img: any) => {\r\n        let target = `${serverUrl}/createImage`\r\n\r\n        let type = img.type\r\n        if(type.split('/')[0] !== 'image'){\r\n            throw new Error('Is not an Image')\r\n        }\r\n\r\n        let headers = {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": type\r\n            }\r\n        }\r\n        sendPostRequest(target, img, headers);\r\n    }\r\n\r\n\r\n    const onChangeHandler = ((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        console.log(e.target.value);\r\n        setURL(e.target.value)\r\n    })\r\n\r\n    const renderTextField = () => {\r\n        if(error){\r\n            return <TextField\r\n                error\r\n                id=\"standard-full-width\"\r\n                label=\"URL\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"www.image.com/image.jpg\"\r\n                helperText=\"Enter URL of Image you wish you upload\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                InputProps={{\r\n                    className: classes.input\r\n                }}\r\n                value={enteredURL}\r\n                onInput={onChangeHandler} \r\n            />\r\n        }else if(!error){\r\n            return <TextField\r\n                \r\n                id=\"standard-full-width\"\r\n                label=\"URL\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"www.image.com/image.jpg\"\r\n                helperText=\"Enter URL of Image you wish you upload\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                InputProps={{\r\n                    className: classes.input\r\n                }}\r\n                value={enteredURL}\r\n                onInput={onChangeHandler} \r\n            />\r\n        }\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n        // `current` points to the mounted file input element\r\n        if (inputFile.current !== null){\r\n            inputFile.current.click();\r\n\r\n            console.log(inputFile.current.files)\r\n            console.log(\"buttonclick\")\r\n\r\n        }\r\n    };\r\n\r\n    const onSubmit = (e: any) => {\r\n        // `current` points to the mounted file input element\r\n        console.log(\"***submited\")\r\n        if (inputFile.current !== null){\r\n            console.log(inputFile.current.files)\r\n            const files =  e.currentTarget.files;\r\n            Array.from(files).forEach(file => {\r\n                try{\r\n                    sendImage(file)\r\n                }catch(err){\r\n                    e.target.value = null\r\n                    alert(\"file was not an image\")\r\n                }\r\n            })   \r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Card className={classes.paper}>\r\n            <p className='modalTitle'>Upload your image</p>\r\n            <p className='modalText'>Wtih a URL</p>\r\n            <form onSubmit = {(e) => { e.preventDefault(); sendURLCreateImage();}}>\r\n                {renderTextField()}\r\n                <Button type=\"submit\"\r\n                        classes={{\r\n                            root: classes.root, \r\n                            label: classes.label, \r\n                        }}>\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n            <p className='modalText'>Or Upload the file</p>\r\n            <input type='file' id='file' ref={inputFile} style={{display: 'none'}} onChange={onSubmit}/>\r\n            <Button onClick={onButtonClick}\r\n                    classes={{\r\n                        root: classes.root, \r\n                        label: classes.label, \r\n                      }}>\r\n                          Open file upload window\r\n            </Button>\r\n            \r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ModalForm","import React, { useState, FC , useRef, useEffect, useReducer } from 'react';\r\nimport { ItemResponse, GraphModalProps, Lines } from './../Interfaces'\r\nimport { serverUrl } from './../constants'\r\n\r\nimport Desmos from 'desmos'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const GraphModal: FC<GraphModalProps> = (props): JSX.Element => {\r\n\r\n    const mystyle = {\r\n        width: \"1200px\",\r\n        height: \"900px\"\r\n      };\r\n\r\n    const bgStyle = {\r\n        width: \"1200px\",\r\n        height: \"50px\",\r\n        backgroundColor: \"#282C34\",\r\n        marginBottom: \"25px\",\r\n            \r\n        borderRadius: '4px',\r\n        // fontFamilly:  'Fira',\r\n        \r\n        color: 'white',\r\n        padding: \"5px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n\r\n    };\r\n\r\n    const refContainer = useRef(null);\r\n    const [lines, setLines] = useState<Lines>();\r\n    const [calc, setCalc] = useState(null);\r\n\r\n    const endpoint = `${serverUrl}/graph/${props.imgToGraph}`;\r\n\r\n    const sendGetRequest = () => {\r\n        axios.get<Lines>(endpoint, {headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }})\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setLines( response.data );\r\n        }).catch(error =>{\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        sendGetRequest();\r\n\r\n        let calculator = Desmos.GraphingCalculator(refContainer.current)\r\n        calculator.setMathBounds({\r\n            left: 0,\r\n            right: 256,\r\n            bottom: 0,\r\n            top: 256\r\n          });\r\n          setCalc(calculator)\r\n    }, [props.imgToGraph]);\r\n\r\n    useEffect(() => {\r\n        // sendGetRequest();\r\n        if(refContainer.current !== null && calc !== null){\r\n            // var calculator = Desmos.GraphingCalculator(refContainer.current);\r\n            if(lines !== undefined){\r\n                let counter = 0\r\n\r\n                lines.data.map(line => {\r\n                        calc.setExpression({ latex: line, color: Desmos.Colors.BLUE });\r\n                        // if (counter%5 === 0) forceUpdate()\r\n                        counter++;\r\n                })\r\n                console.log(calc.getState())\r\n            }\r\n            console.log(lines)\r\n        }\r\n\r\n    }, [lines]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style = {bgStyle}>\r\n                <p>Image created with Math Functions, depending on the detail of the Image this may take several minutes</p>\r\n            </div>\r\n            <div id=\"calculator\" style={mystyle} ref={refContainer}></div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default GraphModal","import React, { useState } from 'react';\nimport uuid from 'react-uuid'\nimport './App.css';\nimport * as Pages from './components/pages'\nimport ModalForm from './components/Modal'\nimport GraphModal from './components/GraphModal'\nimport Modal from '@material-ui/core/Modal';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ArrowUpwardSharpIcon from '@material-ui/icons/ArrowUpwardSharp';\n\ninterface pageType{\n  value : keyof typeof Pages\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n    \n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  }),\n);\n\nconsole.log(Pages)\n\nfunction App() {\n  const classes = useStyles();\n  const [page, setPage] = useState<pageType>({value:\"Home\"});\n  const [imageClicked, setImageClicked] = useState<string>(\"\")\n  const [openAdd, setOpenAdd] = React.useState(false);\n  const [openGraph, setOpenGraph] = React.useState(false);\n  const [imgToGraph, setImgToGraph] = useState(\"\");\n\n\n  const handleOpenAdd = () => {\n    setOpenAdd(true);\n  };\n\n  const handleCloseAdd = () => {\n    setOpenAdd(false);\n  };\n\n  const handleOpenGraph = (img) => {\n    setOpenGraph(true);\n    setImgToGraph(img)\n  };\n\n  const handleCloseGraph = () => {\n    setOpenGraph(false);\n  };\n  \n  const clickImage = (imageName : string) => {\n    setImageClicked(imageName)\n    setPage({value: \"ImageClicked\"})\n  }\n\n  const goHome = () => {\n    setImageClicked(\"\")\n    setPage({value: \"Home\"})\n  }\n\n  const renderPage = (page: keyof typeof Pages) => {\n    let Component;\n    Component = Pages[page]\n  \n    return <Component \n            clickImage = {clickImage}\n            imageClicked = {imageClicked}\n            handleOpenGraph = {handleOpenGraph}\n            handleId = {handleId}\n          />\n  }\n\n  const renderHomeFab = () => {\n    if (page.value === 'Home'){\n      return  <Fab color=\"secondary\" aria-label=\"home\" disabled>\n                <HomeIcon />\n              </Fab>\n    } else if(page.value === 'ImageClicked'){\n      return  <Fab color=\"secondary\" aria-label=\"home\" onClick={() => {goHome()}}>\n                <HomeIcon />\n              </Fab>\n    }\n  }\n  \n  let handleId = () => {\n    if(document.cookie){\n      return document.cookie.split('=')[1]\n    }else{\n      let cook = `id=${uuid()};expires=${new Date('01/01/2100').toUTCString()}`\n      document.cookie = cook\n      return document.cookie.split('=')[1]\n    }\n  }\n\n  let scrollToTop = () => {\n    window.scrollTo(0, 0)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <p className='title'>Image Repository</p>\n        \n        {renderPage(page.value)}\n\n        \n        <div className={classes.root}>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={handleOpenAdd}>\n                    <AddIcon />\n                </Fab>\n                {renderHomeFab()}\n                <Fab color=\"primary\" aria-label=\"add\" onClick={scrollToTop}>\n                    <ArrowUpwardSharpIcon />\n                </Fab>\n\n        </div>\n          <Modal\n            open={openAdd}\n            onClose={handleCloseAdd}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            className={classes.modal}\n          >\n            <ModalForm\n              handleClose = {handleCloseAdd}\n              clickImage = {clickImage}\n            />\n          </Modal>\n          <Modal\n            open={openGraph}\n            onClose={handleCloseGraph}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            className={classes.modal}\n          >\n            <GraphModal\n              handleClose = {handleCloseGraph}\n              clickImage = {clickImage}\n              imgToGraph = {imgToGraph}\n            />\n          </Modal>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}