{"version":3,"sources":["constants.ts","components/pages/Home.tsx","components/pages/ImageClicked.tsx","components/Modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["serverUrl","useStyles","makeStyles","theme","createStyles","root","display","flexWrap","justifyContent","overflow","gridList","width","endpoint","imageEndpoint","Home","props","useState","items","setItems","classes","console","log","useEffect","axios","get","headers","then","response","data","catch","error","className","GridList","cellHeight","cols","map","item","index","Grow","in","timeout","GridListTile","onClick","clickImage","name","src","id","ImageClicked","imageClicked","paper","backgroundColor","borderRadius","boxShadow","padding","spacing","height","fontFamily","color","title","fontSize","textfield","input","background","border","label","textTransform","ModalForm","enteredURL","setURL","setError","inputFile","useRef","sendPostRequest","target","post","handleClose","onChangeHandler","e","value","Card","onSubmit","preventDefault","sendURLCreateImage","TextField","style","margin","placeholder","helperText","fullWidth","InputLabelProps","shrink","InputProps","onInput","Button","type","ref","onChange","current","files","currentTarget","Array","from","forEach","file","img","split","sendImage","err","alert","click","top","right","bottom","left","position","extendedIcon","marginRight","modal","alignItems","Pages","App","page","setPage","setImageClicked","React","open","setOpen","imageName","Component","renderPage","Fab","aria-label","disabled","onClose","aria-labelledby","aria-describedby","Modal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f807db68.chunk.js","sourcesContent":["import { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const serverUrl = \"http://localhost:5000\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      \r\n    },\r\n    gridList: {\r\n      width:1200,\r\n      \r\n    },\r\n  }),\r\n);","import React, { useState, useEffect, FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Item, ItemResponse, PageProps } from '../../Interfaces'\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport { serverUrl, useStyles } from '../../constants'\r\n\r\n// const  apiKEY  =  \"<YOUR_API_KEY_HERE>\";\r\nconst  endpoint  =  `${serverUrl}/all`;\r\nconst imageEndpoint = `${serverUrl}/images/`;\r\n\r\n\r\n\r\nexport const Home: FC<PageProps> = (props): JSX.Element => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const classes = useStyles();\r\n    const [time, setTime] = useState(500)\r\n    \r\n    console.log(props)\r\n\r\n    const sendGetRequest = () => {\r\n        axios.get<ItemResponse>(endpoint, {headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }})\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setItems( response.data.items );\r\n        }).catch(error =>{\r\n            console.log(error)\r\n        })\r\n    };\r\n    \r\n    useEffect(() => {\r\n        sendGetRequest();\r\n    }, [])\r\n\r\n    const myTimeout = () => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={300} className={classes.gridList} cols={3}>\r\n                    {items.map((item,index) => (\r\n                        <Grow in = {true}\r\n                        {...(true ? { timeout: (index +1) *100 } : {})}>\r\n                            <GridListTile key={item.id} onClick={() => {props.clickImage(item.name)}}>\r\n                                <img src={imageEndpoint + item.name}/>\r\n                            </GridListTile>\r\n                        </Grow>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect, FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Item, ItemResponse, PageProps } from '../../Interfaces'\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { serverUrl, useStyles } from '../../constants'\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\n// const  apiKEY  =  \"<YOUR_API_KEY_HERE>\";\r\nconst  endpoint  =  `${serverUrl}/all`;\r\nconst imageEndpoint = `${serverUrl}/images/`;\r\n\r\n\r\n\r\nexport const ImageClicked: FC<PageProps> = (props): JSX.Element => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const classes = useStyles();\r\n    \r\n    console.log(props)\r\n\r\n    const endpoint = `${serverUrl}/getSimilarImages/${props.imageClicked}`;\r\n    console.log(endpoint)\r\n\r\n    const sendGetRequest = () => {\r\n        axios.get<ItemResponse>(endpoint, {headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }})\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setItems( response.data.items );\r\n        }).catch(error =>{\r\n            console.log(error)\r\n        })\r\n    };\r\n    \r\n    useEffect(() => {\r\n        sendGetRequest();\r\n    }, [props.imageClicked])\r\n\r\n    const goToImage = (name: string) => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='selected'>\r\n            <p>Similar Images to Selected Image</p>\r\n\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={400} className={classes.gridList} cols={3}>\r\n                    \r\n                    \r\n                        <GridListTile key={\"main\"}  cols={3}>\r\n                            <img src={imageEndpoint + props.imageClicked}/>\r\n                        </GridListTile>\r\n                    \r\n                    \r\n                    {items.map((item,index) => (\r\n                        <Grow in = {true}\r\n                        {...({ timeout: (index+1) *200 })}>\r\n                            <GridListTile key={item.id} onClick={() => {props.clickImage(item.name)}}>\r\n                                <img src={imageEndpoint + item.name}/>\r\n                            </GridListTile>\r\n                        </Grow>\r\n\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageClicked;","import React, { useState, useEffect, FC , useRef } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { serverUrl } from './../constants'\r\nimport { Item, ItemResponse, ModalProps } from './../Interfaces'\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst  endpoint  =  `${serverUrl}/all`;\r\nconst imageEndpoint = `${serverUrl}/images/`;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            backgroundColor: \"#282C34\",\r\n            \r\n            borderRadius: '4px',\r\n            boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n            padding: theme.spacing(2, 4, 3),\r\n            width: '700px',\r\n            height: '400px',\r\n            fontFamily: \"Roboto\",\r\n            color: 'gray'\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        textfield: {\r\n            color: '#F8FCFF,'\r\n        },\r\n        input: {\r\n            color: \"white\"\r\n        },\r\n        root: {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            borderRadius: 3,\r\n            border: 0,\r\n            color: 'white',\r\n            height: 48,\r\n            padding: '0 30px',\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n          },\r\n          label: {\r\n            textTransform: 'capitalize',\r\n          },\r\n    }),\r\n);\r\n\r\nexport const ModalForm: FC<ModalProps> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n    const [enteredURL, setURL] = useState('');\r\n    const [error, setError] = useState(false)\r\n    const inputFile = useRef<HTMLInputElement>(null)\r\n\r\n    const sendPostRequest = (target: string, data: any, headers: object) => {\r\n        axios.post<ItemResponse>(target, data, headers)\r\n        .then(response => {\r\n            // set base files image to the newly created one\r\n            setError(false)\r\n            props.clickImage(response.data.items[0].name);\r\n            props.handleClose();\r\n        }).catch(error =>{\r\n            console.log(error)\r\n            setError(true)\r\n        })\r\n    };\r\n\r\n    const sendURLCreateImage = () => {\r\n        let target = `${serverUrl}/createImage`\r\n\r\n        let headers = {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"text/plain\"\r\n            }\r\n        }\r\n        sendPostRequest(target, enteredURL, headers);\r\n    }\r\n\r\n    const sendImage = (img: any) => {\r\n        let target = `${serverUrl}/createImage`\r\n\r\n        let type = img.type\r\n        if(type.split('/')[0] != 'image'){\r\n            throw 'Is not an Image'\r\n        }\r\n\r\n        let headers = {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": type\r\n            }\r\n        }\r\n        sendPostRequest(target, img, headers);\r\n    }\r\n\r\n\r\n    const onChangeHandler = ((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        console.log(e.target.value);\r\n        setURL(e.target.value)\r\n    })\r\n\r\n    const renderTextField = () => {\r\n        if(error){\r\n            return <TextField\r\n                error\r\n                id=\"standard-full-width\"\r\n                label=\"URL\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"www.image.com/image.jpg\"\r\n                helperText=\"Enter URL of Image you wish you upload\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                InputProps={{\r\n                    className: classes.input\r\n                }}\r\n                value={enteredURL}\r\n                onInput={onChangeHandler} \r\n            />\r\n        }else if(!error){\r\n            return <TextField\r\n                \r\n                id=\"standard-full-width\"\r\n                label=\"URL\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"www.image.com/image.jpg\"\r\n                helperText=\"Enter URL of Image you wish you upload\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                InputProps={{\r\n                    className: classes.input\r\n                }}\r\n                value={enteredURL}\r\n                onInput={onChangeHandler} \r\n            />\r\n        }\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n        // `current` points to the mounted file input element\r\n        if (inputFile.current !== null){\r\n            inputFile.current.click();\r\n\r\n            console.log(inputFile.current.files)\r\n            console.log(\"buttonclick\")\r\n\r\n        }\r\n    };\r\n\r\n    const onSubmit = (e: any) => {\r\n        // `current` points to the mounted file input element\r\n        console.log(\"***submited\")\r\n        if (inputFile.current !== null){\r\n            console.log(inputFile.current.files)\r\n            const files =  e.currentTarget.files;\r\n            // e.currentTarget.files = {} as FileList\r\n            // for (let file in inputFile.current.files){\r\n            //     console.log(file)\r\n            // }\r\n            Array.from(files).forEach(file => {\r\n                try{\r\n                    sendImage(file)\r\n                }catch(err){\r\n                    e.target.value = null\r\n                    alert(\"file was not an image\")\r\n                }\r\n            })   \r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Card className={classes.paper}>\r\n            <p className='modalTitle'>Upload your image</p>\r\n            <p className='modalText'>Wtih a URL</p>\r\n            <form onSubmit = {(e) => { e.preventDefault(); sendURLCreateImage();}}>\r\n                {renderTextField()}\r\n                <Button type=\"submit\"\r\n                        classes={{\r\n                            root: classes.root, \r\n                            label: classes.label, \r\n                        }}>\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n            <p className='modalText'>Or Upload the file</p>\r\n            <input type='file' id='file' ref={inputFile} style={{display: 'none'}} onChange={onSubmit}/>\r\n            <Button onClick={onButtonClick}\r\n                    classes={{\r\n                        root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                      }}>\r\n                          Open file upload window\r\n            </Button>\r\n            \r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ModalForm","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as Pages from './components/pages'\nimport ModalForm from './components/Modal'\nimport Modal from '@material-ui/core/Modal';\nimport { PageProps } from './Interfaces'\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\ninterface pageType{\n  value : keyof typeof Pages\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n    \n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  }),\n);\n\nconsole.log(Pages)\n\nfunction App() {\n  const classes = useStyles();\n  const [page, setPage] = useState<pageType>({value:\"Home\"});\n  const [imageClicked, setImageClicked] = useState<string>(\"\")\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const clickImage = (imageName : string) => {\n    setImageClicked(imageName)\n    setPage({value: \"ImageClicked\"})\n  }\n\n  const goHome = () => {\n    setImageClicked(\"\")\n    setPage({value: \"Home\"})\n  }\n\n  const renderPage = (page: keyof typeof Pages) => {\n    let Component;\n    Component = Pages[page]\n  \n    return <Component \n          clickImage = {clickImage}\n          imageClicked = {imageClicked}\n          />\n  }\n\n  const renderHomeFab = () => {\n    if (page.value === 'Home'){\n      return  <Fab color=\"secondary\" aria-label=\"home\" disabled>\n                <HomeIcon />\n              </Fab>\n    } else if(page.value === 'ImageClicked'){\n      return  <Fab color=\"secondary\" aria-label=\"home\" onClick={() => {goHome()}}>\n                <HomeIcon />\n              </Fab>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <p className='title'>Image Repository</p>\n        \n        {renderPage(page.value)}\n\n        \n        <div className={classes.root}>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={handleOpen}>\n                    <AddIcon />\n                </Fab>\n                {renderHomeFab()}\n\n        </div>\n          <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          className={classes.modal}\n          >\n            <ModalForm\n              handleClose = {handleClose}\n              clickImage = {clickImage}\n            />\n          </Modal>\n      </header>\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}